---
AWSTemplateFormatVersion: 2010-09-09

Description: Creates a virtual private cloud with NAT management, with 3 layers, across 3 availability zones.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General
        Parameters:
          - ProjectName
          - Environment
      - Label:
          default: VPC
        Parameters:
          - VPCCidrBlock
      - Label:
          default: Public subnets
        Parameters:
          - PublicSubnet1CidrBlock
          - PublicSubnet2CidrBlock
          - PublicSubnet3CidrBlock
      - Label:
          default: Application subnets
        Parameters:
          - ApplicationSubnet1CidrBlock
          - ApplicationSubnet2CidrBlock
          - ApplicationSubnet3CidrBlock
      - Label:
          default: Database subnets
        Parameters:
          - DatabaseSubnet1CidrBlock
          - DatabaseSubnet2CidrBlock
          - DatabaseSubnet3CidrBlock

Parameters:

  # ==================================== #
  #                GENERAL               #
  # ==================================== #

  ProjectName:
    Description: The project name.
    Type: String
    Default: Spring Boot AWS

  Environment:
    Description: The stack environment.
    Type: String
    AllowedValues:
      - testing
      - staging
      - production
    ConstraintDescription: must be testing, staging or production.

  # ==================================== #
  #                  VPC                 #
  # ==================================== #

  VPCCidrBlock:
    Description: The IPv4 CIDR block assigned to the VPC.
    Type: String
    Default: 10.0.0.0/22
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR block of the form x.x.x.x/x.

  # ==================================== #
  #            PUBLIC SUBNETS            #
  # ==================================== #

  PublicSubnet1CidrBlock:
    Description: The IPv4 CIDR block assigned to the public subnet 1.
    Type: String
    Default: 10.0.0.0/26
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR block of the form x.x.x.x/x.

  PublicSubnet2CidrBlock:
    Description: The IPv4 CIDR block assigned to the public subnet 2.
    Type: String
    Default: 10.0.0.64/26
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR block of the form x.x.x.x/x.

  PublicSubnet3CidrBlock:
    Description: The IPv4 CIDR block assigned to the public subnet 3.
    Type: String
    Default: 10.0.0.128/26
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR block of the form x.x.x.x/x.

  # ==================================== #
  #          APPLICATION SUBNETS         #
  # ==================================== #

  ApplicationSubnet1CidrBlock:
    Description: The IPv4 CIDR block assigned to the application subnet 1.
    Type: String
    Default: 10.0.1.0/25
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR block of the form x.x.x.x/x.

  ApplicationSubnet2CidrBlock:
    Description: The IPv4 CIDR block assigned to the application subnet 2.
    Type: String
    Default: 10.0.1.128/25
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR block of the form x.x.x.x/x.

  ApplicationSubnet3CidrBlock:
    Description: The IPv4 CIDR block assigned to the application subnet 3.
    Type: String
    Default: 10.0.2.0/25
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR block of the form x.x.x.x/x.

  # ==================================== #
  #            DATABASE SUBNETS          #
  # ==================================== #

  DatabaseSubnet1CidrBlock:
    Description: The IPv4 CIDR block assigned to the database subnet 1.
    Type: String
    Default: 10.0.3.0/26
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR block of the form x.x.x.x/x.

  DatabaseSubnet2CidrBlock:
    Description: The IPv4 CIDR block assigned to the database subnet 2.
    Type: String
    Default: 10.0.3.64/26
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR block of the form x.x.x.x/x.

  DatabaseSubnet3CidrBlock:
    Description: The IPv4 CIDR block assigned to the database subnet 3.
    Type: String
    Default: 10.0.3.128/26
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR block of the form x.x.x.x/x.

Conditions:
  IsProductionEnvironment: !Equals [!Ref Environment, production]

Resources:
  # ==================================== #
  #                  VPC                 #
  # ==================================== #

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: vpc-1
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Public

  # ==================================== #
  #           INTERNET GATEWAY           #
  # ==================================== #

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: internet-gateway-1
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Public

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # ==================================== #
  #            PUBLIC SUBNETS            #
  # ==================================== #

  # Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref PublicSubnet1CidrBlock
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: public-subnet-1
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Public

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Condition: IsProductionEnvironment
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref PublicSubnet2CidrBlock
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: public-subnet-2
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Public

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Condition: IsProductionEnvironment
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref PublicSubnet3CidrBlock
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: public-subnet-3
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Public

  # NAT gateways
  ElasticIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: elastic-ip-1
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Public

  ElasticIP2:
    Type: AWS::EC2::EIP
    Condition: IsProductionEnvironment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: elastic-ip-2
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Public

  ElasticIP3:
    Type: AWS::EC2::EIP
    Condition: IsProductionEnvironment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: elastic-ip-3
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Public

  NATGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIP1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: nat-gateway-1
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Public

  NATGateway2:
    Type: AWS::EC2::NatGateway
    Condition: IsProductionEnvironment
    Properties:
      AllocationId: !GetAtt ElasticIP2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: nat-gateway-2
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Public

  NATGateway3:
    Type: AWS::EC2::NatGateway
    Condition: IsProductionEnvironment
    Properties:
      AllocationId: !GetAtt ElasticIP3.AllocationId
      SubnetId: !Ref PublicSubnet3
      Tags:
        - Key: Name
          Value: nat-gateway-3
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Public

  # Route tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: public-route-table-1
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Public

  PublicRoute1:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: IsProductionEnvironment
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: IsProductionEnvironment
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicRouteTable

  # Network ACL
  PublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: public-network-acl-1
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Public

  InboundHTTPPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535

  OutboundPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535

  PublicSubnet1NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      NetworkAclId: !Ref PublicNetworkAcl

  PublicSubnet2NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: IsProductionEnvironment
    Properties:
      SubnetId: !Ref PublicSubnet2
      NetworkAclId: !Ref PublicNetworkAcl

  PublicSubnet3NetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Condition: IsProductionEnvironment
    Properties:
      SubnetId: !Ref PublicSubnet3
      NetworkAclId: !Ref PublicNetworkAcl

  # ==================================== #
  #          APPLICATION SUBNETS         #
  # ==================================== #

  # Subnets
  ApplicationSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref ApplicationSubnet1CidrBlock
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: application-subnet-1
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Private

  ApplicationSubnet2:
    Type: AWS::EC2::Subnet
    Condition: IsProductionEnvironment
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref ApplicationSubnet2CidrBlock
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: application-subnet-2
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Private

  ApplicationSubnet3:
    Type: AWS::EC2::Subnet
    Condition: IsProductionEnvironment
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref ApplicationSubnet3CidrBlock
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: application-subnet-3
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Private

  # Route tables
  ApplicationSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: application-subnet-1-route-table
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Private

  ApplicationSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Condition: IsProductionEnvironment
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: application-subnet-2-route-table
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Private

  ApplicationSubnet3RouteTable:
    Type: AWS::EC2::RouteTable
    Condition: IsProductionEnvironment
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: application-subnet-3-route-table
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Private

  ApplicationSubnet1Route1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ApplicationSubnet1RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1

  ApplicationSubnet2Route1:
    Type: AWS::EC2::Route
    Condition: IsProductionEnvironment
    Properties:
      RouteTableId: !Ref ApplicationSubnet2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway2

  ApplicationSubnet3Route1:
    Type: AWS::EC2::Route
    Condition: IsProductionEnvironment
    Properties:
      RouteTableId: !Ref ApplicationSubnet3RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway3

  ApplicationSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ApplicationSubnet1
      RouteTableId: !Ref ApplicationSubnet1RouteTable

  ApplicationSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: IsProductionEnvironment
    Properties:
      SubnetId: !Ref ApplicationSubnet2
      RouteTableId: !Ref ApplicationSubnet2RouteTable

  ApplicationSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: IsProductionEnvironment
    Properties:
      SubnetId: !Ref ApplicationSubnet3
      RouteTableId: !Ref ApplicationSubnet3RouteTable

  # ==================================== #
  #            DATABASE SUBNETS          #
  # ==================================== #

  # Subnets
  DatabaseSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref DatabaseSubnet1CidrBlock
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: database-subnet-1
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Private

  DatabaseSubnet2:
    Type: AWS::EC2::Subnet
    Condition: IsProductionEnvironment
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref DatabaseSubnet2CidrBlock
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: database-subnet-2
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Private

  DatabaseSubnet3:
    Type: AWS::EC2::Subnet
    Condition: IsProductionEnvironment
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Ref DatabaseSubnet3CidrBlock
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: database-subnet-3
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Private

  # Route tables
  DatabaseSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: database-subnet-1-route-table
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Private

  DatabaseSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Condition: IsProductionEnvironment
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: database-subnet-2-route-table
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Private

  DatabaseSubnet3RouteTable:
    Type: AWS::EC2::RouteTable
    Condition: IsProductionEnvironment
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: database-subnet-3-route-table
        - Key: Project
          Value: !Ref ProjectName
        - Key: Region
          Value: !Ref AWS::Region
        - Key: Environment
          Value: !Ref Environment
        - Key: Network
          Value: Private

  DatabaseSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DatabaseSubnet1
      RouteTableId: !Ref DatabaseSubnet1RouteTable

  DatabaseSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: IsProductionEnvironment
    Properties:
      SubnetId: !Ref DatabaseSubnet2
      RouteTableId: !Ref DatabaseSubnet2RouteTable

  DatabaseSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: IsProductionEnvironment
    Properties:
      SubnetId: !Ref DatabaseSubnet3
      RouteTableId: !Ref DatabaseSubnet3RouteTable

Outputs:
  VPCId:
    Description: The identifier of the VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-VPC

  PublicSubnet1Id:
    Description: The identifier of the public subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-PublicSubnet1

  PublicSubnet2Id:
    Description: The identifier of the public subnet 2
    Condition: IsProductionEnvironment
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-PublicSubnet2

  PublicSubnet3Id:
    Description: The identifier of the public subnet 3
    Condition: IsProductionEnvironment
    Value: !Ref PublicSubnet3
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-PublicSubnet3

  ApplicationSubnet1Id:
    Description: The identifier of the application subnet 1
    Value: !Ref ApplicationSubnet1
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-ApplicationSubnet1

  ApplicationSubnet2Id:
    Description: The identifier of the application subnet 2
    Condition: IsProductionEnvironment
    Value: !Ref ApplicationSubnet2
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-ApplicationSubnet2

  ApplicationSubnet3Id:
    Description: The identifier of the application subnet 3
    Condition: IsProductionEnvironment
    Value: !Ref ApplicationSubnet3
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-ApplicationSubnet3

  DatabaseSubnet1Id:
    Description: The identifier of the database subnet 1
    Value: !Ref DatabaseSubnet1
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-DatabaseSubnet1

  DatabaseSubnet2Id:
    Description: The identifier of the database subnet 2
    Condition: IsProductionEnvironment
    Value: !Ref DatabaseSubnet2
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-DatabaseSubnet2

  DatabaseSubnet3Id:
    Description: The identifier of the database subnet 3
    Condition: IsProductionEnvironment
    Value: !Ref DatabaseSubnet3
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-DatabaseSubnet3

  DefaultSecurityGroupId:
    Description: The identifier of the default security group
    Value: !GetAtt VPC.DefaultSecurityGroup
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-DefaultSecurityGroup
